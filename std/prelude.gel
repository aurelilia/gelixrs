import std/intrinsics/puts
import std/intrinsics/quick_exit
import std/string/ToString

// export std/collections/Array
export std/iter/Range
export std/string/String

func print(a: ToString) = puts(a.to_string().ptr)

func cast[T](value: T) -> T = value

/*
func try_cast[T, V](value: T) -> Opt[V] {
    if (value is V) new Opt[V]:Some(value)
    else new Opt[V]:None
}
*/

func panic(msg: String) {
    // print("[gelix] Panicked at: " + msg)
    // print("[gelix] Exiting.")
    quick_exit(1i32)
}

enum Opt[T] {
    Some {
        val value: T
        construct(value)
    }

    None

    /*
    func map[M](map_fn: (T): M) -> Opt[M] {
        if (this is Opt[T]:Some) return new Opt:Some(map_fn(this.value))
        new Opt[M]:None
    }*/
}

enum Res[T, E] {
    Ok(val value: T)
    Err(val err: E)
}